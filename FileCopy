package com.gmail.nikolajievich;

import java.io.File;
import java.io.FileFilter;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FilenameFilter;
import java.io.IOException;
import java.nio.file.Path;

public class FileCopy implements FileFilter {

	private String[] arr;	
	

	/**
	 * @return the arr
	 */
	public String[] getArr() {
		return arr;
	}

	/**
	 * @param arr the arr to set
	 */
	public void setArr(String[] arr) {
		this.arr = arr;
	}

	public FileCopy(String[] arr) {
		super();
		this.arr = arr;
	}

	public FileCopy() {
		super();
		// TODO Auto-generated constructor stub
	}

	private boolean check(String ext) {
		for (String stringExt : arr) {
			if (stringExt.equals(ext)) {
				return true;
			}

		}
		return false;
	}

	/* (non-Javadoc)
	 * @see java.io.FileFilter#accept(java.io.File)
	 */
	@Override
	public boolean accept(File pathname) {
		// TODO Auto-generated method stub
		return false;
	}

	public boolean fileCope(File in, File out, File pathname) throws IOException {

		byte[] buffer = new byte[1024 * 1024];
		int readByte = 0;
		int pointIndex = pathname.getName().lastIndexOf(".");
		if (pointIndex == -1) {
			return false;
		}
		try (FileInputStream fis = new FileInputStream(in); FileOutputStream fos = new FileOutputStream(out)) {

			for (; (readByte = fis.read(buffer)) > 0;) {
				fos.write(buffer, 0, readByte);

			}
		} catch (IOException e) {
			throw e;
		}
		String ext = pathname.getName().substring(pointIndex + 1);
		return check(ext);
	}

}
